{"version":3,"sources":["components/ColorPicker.js","components/SubmitButton.js","utils/styleOptions.js","components/PreferenceForm.js","utils/prefPropType.js","components/Preview.js","utils/codeSample.js","components/ErrorSnackbar.js","components/Loader.js","components/Main.js","App.js","index.js","ipfs/preferences.js"],"names":["ColorPicker","state","anchorEl","openPicker","evt","preventDefault","setState","currentTarget","closePicker","handleChange","value","target","hex","props","onChange","this","classes","Fragment","Button","onClick","className","preview","style","backgroundColor","Popover","open","onClose","onChangeComplete","React","Component","withStyles","theme","createStyles","button","fontSize","marginLeft","spacing","width","height","text","icon","submitted","active","textNormal","textSubmitted","textActive","variant","color","type","disabled","PreferenceForm","PropTypes","shape","username","string","primaryColor","secondaryColor","font","codeStyle","handleCIDChange","onCIDChange","handlePrefChange","name","onPrefChange","preferences","justSaved","saving","justLoaded","Paper","root","AppBar","position","Toolbar","Typography","Container","container","onSubmit","onLoad","TextField","label","cid","fullWidth","input","Divider","divider","onSave","InputLabel","shrink","Select","MenuItem","key","styleOptions","map","paddingTop","paddingBottom","header","borderBottom","palette","marginBottom","marginTop","display","SyntaxHighlighter","registerLanguage","js","Preview","getTheme","createMuiTheme","primary","main","secondary","isDark","classnames","darkTheme","lightTheme","language","codeStyles","JSON","stringify","margin","snackbar","error","dark","content","message","alignItems","errorIcon","marginRight","closeIcon","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent","action","IconButton","justifyContent","loaded","children","CircularProgress","size","Main","ipfsLoaded","loadPreferences","a","toString","localStorage","setItem","handleLoad","handleSave","savePreferences","handleErrorClose","getItem","DefaultCid","instructions","Grid","item","sm","md","App","CssBaseline","ReactDOM","render","document","getElementById","password","process","getIpfs","getIpfsWithConfig","localPeers","browserPeers","validPreferences","length","ipfs","cat","resp","Error","parse","toAdd","Buffer","from","add","hash","pin","console"],"mappings":"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","file":"static/js/main.0aed96a3.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, createStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Popover from \"@material-ui/core/Popover\";\nimport { SwatchesPicker } from \"react-color\";\n\nclass ColorPicker extends React.Component {\n  state = { anchorEl: null };\n\n  openPicker = evt => {\n    evt.preventDefault();\n    this.setState({ anchorEl: evt.currentTarget });\n  };\n\n  closePicker = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  handleChange = evt => {\n    const value = {\n      target: {\n        value: evt.hex\n      }\n    };\n    this.closePicker();\n    this.props.onChange(value);\n  };\n\n  render() {\n    const { value, classes } = this.props;\n    return (\n      <React.Fragment>\n        <Button onClick={this.openPicker}>\n          {value}\n          <div className={classes.preview} style={{ backgroundColor: value }} />\n        </Button>\n        <Popover\n          open={!!this.state.anchorEl}\n          anchorEl={this.state.anchorEl}\n          onClose={this.closePicker}\n        >\n          <SwatchesPicker onChangeComplete={this.handleChange} />\n        </Popover>\n      </React.Fragment>\n    );\n  }\n}\n\nColorPicker.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  classes: PropTypes.objectOf(PropTypes.string)\n};\n\nconst styles = theme =>\n  createStyles({\n    button: {\n      \"& svg\": {\n        fontSize: 20,\n        marginLeft: theme.spacing(1)\n      }\n    },\n    preview: {\n      marginLeft: theme.spacing(1),\n      width: theme.spacing(2),\n      height: theme.spacing(2)\n    }\n  });\n\nexport default withStyles(styles)(ColorPicker);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, createStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\nconst SubmitButton = props => {\n  const { submitted, active, textNormal, textSubmitted, textActive } = props;\n  let text, icon;\n  if (active) {\n    text = textActive;\n  } else if (submitted) {\n    text = textSubmitted;\n    icon = <CheckIcon />;\n  } else {\n    text = textNormal;\n    icon = props.icon;\n  }\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"secondary\"\n      type=\"submit\"\n      disabled={submitted}\n      className={props.classes.button}\n    >\n      {text}\n      {icon}\n    </Button>\n  );\n};\n\nSubmitButton.propTypes = {\n  textNormal: PropTypes.string.isRequired,\n  textSubmitted: PropTypes.string.isRequired,\n  textActive: PropTypes.string,\n  icon: PropTypes.element,\n  submitted: PropTypes.bool,\n  active: PropTypes.bool,\n  classes: PropTypes.objectOf(PropTypes.string)\n};\n\nconst styles = theme =>\n  createStyles({\n    button: {\n      \"& svg\": {\n        fontSize: 20,\n        marginLeft: 8\n      }\n    }\n  });\n\nexport default withStyles(styles)(SubmitButton);\n","export default [\n  \"arduinoLight\",\n  \"codepenEmbed\",\n  \"darcula\",\n  \"docco\",\n  \"github\",\n  \"googlecode\",\n  \"hybrid\",\n  \"monokaiSublime\",\n  \"nord\",\n  \"ocean\",\n  \"pojoaque\",\n  \"tomorrow\",\n  \"tomorrowNight\",\n  \"vs\"\n];\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, createStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport LoadIcon from \"@material-ui/icons/Unarchive\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport ColorPicker from \"./ColorPicker\";\nimport SubmitButton from \"./SubmitButton\";\nimport styleOptions from \"../utils/styleOptions\";\nimport PrefPropType from \"../utils/prefPropType\";\nimport Container from \"@material-ui/core/Container\";\n\nclass PreferenceForm extends React.Component {\n  handleCIDChange = evt => {\n    this.props.onCIDChange(evt.target.value);\n  };\n\n  handlePrefChange = name => evt => {\n    const value = evt.target.value;\n    this.props.onPrefChange(name, value);\n  };\n\n  render() {\n    const { preferences, justSaved, saving, justLoaded, classes } = this.props;\n\n    return (\n      <Paper className={classes.root}>\n        <AppBar position=\"relative\">\n          <Toolbar>\n            <Typography variant=\"h5\">Settings</Typography>\n          </Toolbar>\n        </AppBar>\n        <Container className={classes.container}>\n          <form onSubmit={this.props.onLoad}>\n            <TextField\n              label=\"cid\"\n              value={this.props.cid}\n              onChange={this.handleCIDChange}\n              fullWidth\n              className={classes.input}\n            />\n            <SubmitButton\n              textNormal=\"Load\"\n              textSubmitted=\"Loaded\"\n              icon={<LoadIcon />}\n              submitted={justLoaded}\n            />\n          </form>\n          <Divider className={classes.divider} />\n          <form onSubmit={this.props.onSave}>\n            <TextField\n              label=\"Username\"\n              value={preferences.username}\n              onChange={this.handlePrefChange(\"username\")}\n              fullWidth\n              className={classes.input}\n            />\n            <InputLabel shrink>Primary Color</InputLabel>\n            <ColorPicker\n              value={preferences.primaryColor}\n              onChange={this.handlePrefChange(\"primaryColor\")}\n            />\n            <InputLabel shrink>Secondary Color</InputLabel>\n            <ColorPicker\n              value={preferences.secondaryColor}\n              onChange={this.handlePrefChange(\"secondaryColor\")}\n            />\n            <InputLabel shrink>Theme</InputLabel>\n            <Select\n              value={preferences.theme}\n              onChange={this.handlePrefChange(\"theme\")}\n              fullWidth\n              className={classes.input}\n            >\n              <MenuItem key=\"light\" value=\"light\">\n                light\n              </MenuItem>\n              <MenuItem key=\"dark\" value=\"dark\">\n                dark\n              </MenuItem>\n            </Select>\n            <InputLabel shrink>Code Style</InputLabel>\n            <Select\n              value={preferences.codeStyle}\n              onChange={this.handlePrefChange(\"codeStyle\")}\n              fullWidth\n              className={classes.input}\n            >\n              {styleOptions.map(style => (\n                <MenuItem key={style} value={style}>\n                  {style}\n                </MenuItem>\n              ))}\n            </Select>\n            <SubmitButton\n              textNormal=\"Save\"\n              textSubmitted=\"Saved\"\n              textActive=\"Saving...\"\n              icon={<SaveIcon />}\n              submitted={justSaved}\n              active={saving}\n            />\n          </form>\n        </Container>\n      </Paper>\n    );\n  }\n}\n\nPreferenceForm.propTypes = {\n  cid: PropTypes.string.isRequired,\n  preferences: PrefPropType.isRequired,\n  justSaved: PropTypes.bool.isRequired,\n  saving: PropTypes.bool.isRequired,\n  justLoaded: PropTypes.bool.isRequired,\n  onCIDChange: PropTypes.func.isRequired,\n  onPrefChange: PropTypes.func.isRequired,\n  onLoad: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n  classes: PropTypes.objectOf(PropTypes.string)\n};\n\nconst styles = theme =>\n  createStyles({\n    root: {\n      width: \"100%\"\n    },\n    container: {\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4)\n    },\n    header: {\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      paddingBottom: theme.spacing(1),\n      marginBottom: theme.spacing(2)\n    },\n    divider: {\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(4)\n    },\n    input: {\n      marginBottom: theme.spacing(2),\n      width: \"100%\",\n      display: \"block\"\n    }\n  });\n\nexport default withStyles(styles)(PreferenceForm);\n","import PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n  username: PropTypes.string,\n  primaryColor: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  theme: PropTypes.string,\n  font: PropTypes.string,\n  codeStyle: PropTypes.string\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  withStyles,\n  createStyles,\n  MuiThemeProvider,\n  createMuiTheme\n} from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport { Light as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport js from \"react-syntax-highlighter/dist/esm/languages/hljs/javascript\";\nimport * as codeStyles from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport codeSample from \"../utils/codeSample\";\nimport PrefPropType from \"../utils/prefPropType\";\nSyntaxHighlighter.registerLanguage(\"javascript\", js);\n\nclass Preview extends React.Component {\n  getTheme = preferences => {\n    return createMuiTheme({\n      palette: {\n        primary: {\n          main: preferences.primaryColor\n        },\n        secondary: {\n          main: preferences.secondaryColor\n        }\n      }\n    });\n  };\n\n  render() {\n    const { preferences = {}, classes } = this.props;\n    const theme = this.getTheme(preferences);\n    const isDark = preferences.theme === \"dark\";\n\n    return (\n      <Paper\n        className={classnames(\n          classes.root,\n          isDark ? classes.darkTheme : classes.lightTheme\n        )}\n      >\n        <MuiThemeProvider theme={theme}>\n          <AppBar position=\"relative\">\n            <Toolbar>\n              <Typography variant=\"h5\">Preview</Typography>\n            </Toolbar>\n          </AppBar>\n          <Container className={classes.container}>\n            <Typography variant=\"h6\">\n              Welcome {preferences.username}!\n            </Typography>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              className={classes.button}\n            >\n              Primary\n            </Button>\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              className={classes.button}\n            >\n              Secondary\n            </Button>\n\n            <SyntaxHighlighter\n              language=\"javascript\"\n              style={codeStyles[preferences.codeStyle]}\n            >\n              {codeSample}\n            </SyntaxHighlighter>\n            <SyntaxHighlighter\n              language=\"json\"\n              style={codeStyles[preferences.codeStyle]}\n            >\n              {\n                \"# Current Settings \\n\" + \n                JSON.stringify(preferences, null, 2)\n              }\n            </SyntaxHighlighter>\n          </Container>\n        </MuiThemeProvider>\n      </Paper>\n    );\n  }\n}\n\nPreview.propTypes = {\n  preferences: PrefPropType,\n  classes: PropTypes.objectOf(PropTypes.string)\n};\n\nconst styles = theme =>\n  createStyles({\n    root: {\n      width: \"100%\"\n    },\n    lightTheme: {},\n    darkTheme: {\n      backgroundColor: \"#424242\",\n      color: \"#fff\"\n    },\n    container: {\n      paddingTop: theme.spacing(3),\n      paddingBottom: theme.spacing(3)\n    },\n    button: {\n      margin: theme.spacing(1)\n    }\n  });\n\nexport default withStyles(styles)(Preview);\n","export default `\nexport const ipfsIsWorking = async ipfs => {\n  try {\n    const id = await ipfs.id();\n    if (id.id !== undefined && id.agentVersion !== undefined) {\n      return true;\n    } else {\n      return false;\n    }\n  } catch (err) {\n    return false;\n  }\n};\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, createStyles } from \"@material-ui/core/styles\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst ErrorSnackbar = props => {\n  const { classes } = props;\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"right\"\n      }}\n      open={!!props.error}\n      onClose={props.onClose}\n      autoHideDuration={5000}\n      className={classes.snackbar}\n    >\n      <SnackbarContent\n        className={classes.content}\n        message={\n          <span className={classes.message}>\n            <ErrorIcon className={classes.errorIcon} />\n            {props.error}\n          </span>\n        }\n        action={[\n          <IconButton key=\"close\" color=\"inherit\" onClick={props.onClose}>\n            <CloseIcon className={classes.closeIcon} />\n          </IconButton>\n        ]}\n      />\n    </Snackbar>\n  );\n};\n\nErrorSnackbar.propTypes = {\n  error: PropTypes.string,\n  onClose: PropTypes.func.isRequired,\n  classes: PropTypes.objectOf(PropTypes.string)\n};\n\nconst styles = theme =>\n  createStyles({\n    snackbar: {\n      backgroundColor: theme.palette.error.dark\n    },\n    content: {\n      backgroundColor: \"inherit\"\n    },\n    message: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    errorIcon: {\n      fontSize: 20,\n      marginRight: 8\n    },\n    closeIcon: {\n      fontSize: 20\n    }\n  });\n\nexport default withStyles(styles)(ErrorSnackbar);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, createStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Loader = props => {\n  const { loaded, classes } = props;\n  if (loaded) {\n    return props.children;\n  }\n  return (\n    <div className={classes.root}>\n      <CircularProgress size={100} />\n    </div>\n  );\n};\n\nLoader.propTypes = {\n  loaded: PropTypes.bool,\n  children: PropTypes.element,\n  classes: PropTypes.objectOf(PropTypes.string)\n};\n\nconst styles = theme =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      paddingTop: theme.spacing(8)\n    }\n  });\n\nexport default withStyles(styles)(Loader);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, createStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PreferenceForm from \"./PreferenceForm\";\nimport Preview from \"./Preview\";\nimport ErrorSnackbar from \"./ErrorSnackbar\";\nimport Loader from \"./Loader\";\nimport {\n  loadPreferences,\n  savePreferences,\n  DefaultCid\n} from \"../ipfs/preferences\";\n\nclass Main extends React.Component {\n  state = {\n    ipfsLoaded: false,\n    cid: \"\",\n    preferences: {\n      username: \"\",\n      primaryColor: \"#6446fa\",\n      secondaryColor: \"#ff5274\",\n      theme: \"light\",\n      font: \"Roboto\",\n      codeStyle: \"darcula\"\n    },\n    justSaved: false,\n    saving: false,\n    justLoaded: false,\n    error: null\n  };\n\n  async componentDidMount() {\n    const cid = localStorage.getItem(\"preferenceCID\") || DefaultCid;\n    await this.loadPreferences(cid);\n  }\n\n  handleCIDChange = value => {\n    this.setState({\n      ...this.state,\n      cid: value,\n      justLoaded: false\n    });\n  };\n\n  handlePrefChange = (name, value) => {\n    this.setState(state => ({\n      ...state,\n      preferences: {\n        ...state.preferences,\n        [name]: value\n      },\n      justSaved: false\n    }));\n  };\n\n  loadPreferences = async cid => {\n    let preferences;\n    try {\n      preferences = await loadPreferences(cid);\n    } catch (error) {\n      this.setState({ error: error.toString() });\n      return;\n    }\n\n    localStorage.setItem(\"preferenceCID\", cid);\n    this.setState({\n      cid,\n      preferences,\n      justLoaded: true,\n      ipfsLoaded: true\n    });\n  };\n\n  handleLoad = async evt => {\n    evt.preventDefault();\n    const { cid } = this.state;\n    this.loadPreferences(cid);\n  };\n\n  handleSave = async evt => {\n    evt.preventDefault();\n    const { preferences } = this.state;\n    if (preferences) {\n      this.setState({ saving: true });\n      let cid;\n      try {\n        cid = await savePreferences(preferences);\n      } catch (error) {\n        this.setState({ error: error.toString(), saving: false });\n        return;\n      }\n      localStorage.setItem(\"preferenceCID\", cid);\n      this.setState({\n        cid,\n        justSaved: true,\n        saving: false,\n        ipfsLoaded: true\n      });\n    }\n  };\n\n  handleErrorClose = evt => {\n    if (evt) {\n      evt.preventDefault();\n    }\n    this.setState({ error: null });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Container className={classes.container}>\n        <Typography variant=\"h4\">\n          IPFS Portable User Settings\n        </Typography>\n        <Typography className={classes.instructions}>\n          <strong>Instructions: </strong> Try changing and saving your settings. The CID (content identifier) at the top of the form will update as well. Your settings are now available on the decentralized web! Copy the CID and trying loading your settings in another browser or on a different computer.\n        </Typography>\n        <Grid container spacing={3}>\n          <Grid item sm={12} md={6}>\n            <PreferenceForm\n              cid={this.state.cid}\n              preferences={this.state.preferences}\n              justSaved={this.state.justSaved}\n              saving={this.state.saving}\n              justLoaded={this.state.justLoaded}\n              onCIDChange={this.handleCIDChange}\n              onPrefChange={this.handlePrefChange}\n              onLoad={this.handleLoad}\n              onSave={this.handleSave}\n            />\n          </Grid>\n          <Grid item sm={12} md={6}>\n            <Loader loaded={this.state.ipfsLoaded}>\n              <Preview\n                cid={this.state.cid}\n                preferences={this.state.preferences}\n              />\n            </Loader>\n          </Grid>\n        </Grid>\n        <ErrorSnackbar\n          error={this.state.error}\n          onClose={this.handleErrorClose}\n        />\n      </Container>\n    );\n  }\n}\n\nMain.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired\n};\n\nconst styles = theme =>\n  createStyles({\n    container: {\n      marginTop: theme.spacing(8)\n    },\n    main: {\n      display: \"flex\"\n    },\n    instructions: {\n      marginTop: 16,\n      marginBottom: 32\n    }\n  });\n\nexport default withStyles(styles)(Main);\n","import React from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Main from \"./components/Main\";\n\nconst theme = createMuiTheme({\n  palette: {\n    // type: \"dark\",\n    primary: {\n      main: \"#6446fa\"\n    },\n    secondary: {\n      main: \"#ff5274\"\n    }\n  }\n});\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Main />\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","import getIpfsWithConfig from \"get-ipfs\";\nimport { pin } from \"@fission-suite/client\";\n\nconst ipfsProvider =\n  process.env.REACT_APP_INTERPLANETARY_FISSION_URL || \"https://hostless.dev\";\nconst username = process.env.REACT_APP_INTERPLANETARY_FISSION_USERNAME;\nconst password = process.env.REACT_APP_INTERPLANETARY_FISSION_PASSWORD;\nconst bootstrapNodeWSS =\n  process.env.REACT_APP_BOOTSTRAP_NODE_WSS ||\n  \"/dns4/node.fission.systems/tcp/4003/wss/ipfs/QmVLEz2SxoNiFnuyLpbXsH6SvjPTrHNMU88vCQZyhgBzgw\";\nconst bootstrapNodeTCP =\n  process.env.REACT_APP_BOOTSTRAP_NODE_TCP ||\n  \"/ip4/3.215.160.238/tcp/4001/ipfs/QmVLEz2SxoNiFnuyLpbXsH6SvjPTrHNMU88vCQZyhgBzgw\";\n\nexport const DefaultCid =\n  process.env.REACT_APP_DEFAULT_CID ||\n  \"QmUWWqCNSdZmus7mc52um5cpqUi1CaE97AzBTY7iWfBXV9\";\n\nconst getIpfs = async () => {\n  return getIpfsWithConfig({\n    localPeers: [bootstrapNodeTCP],\n    browserPeers: [bootstrapNodeWSS]\n  });\n};\n\nexport const validPreferences = preferences => {\n  return (\n    preferences.codeStyle &&\n    preferences.primaryColor &&\n    preferences.primaryColor.length === 7 &&\n    preferences.secondaryColor &&\n    preferences.secondaryColor.length === 7 &&\n    preferences.theme &&\n    (preferences.theme === \"light\" || preferences.theme === \"dark\") &&\n    preferences.username &&\n    preferences.codeStyle\n  );\n};\n\nexport const loadPreferences = async cid => {\n  const ipfs = await getIpfs();\n  let resp, preferences;\n  try {\n    resp = await ipfs.cat(cid);\n  } catch (err) {\n    throw new Error(\"CID not found\");\n  }\n  try {\n    preferences = JSON.parse(resp);\n  } catch (err) {\n    throw new Error(\"CID does not contain preferences\");\n  }\n  if (!validPreferences(preferences)) {\n    throw new Error(\"Preferences are outdated. Try saving a new version.\");\n  }\n  return preferences;\n};\n\nexport const savePreferences = async preferences => {\n  if (!validPreferences(preferences)) {\n    throw new Error(\"Preferences are not valid. Try saving a new version.\");\n  }\n  const ipfs = await getIpfs();\n  const toAdd = Buffer.from(JSON.stringify(preferences));\n  let resp, cid;\n  try {\n    resp = await ipfs.add(toAdd);\n  } catch (err) {\n    throw new Error(\"Content could not be uploaded to IPFS\");\n  }\n  try {\n    cid = resp[0].hash;\n  } catch (err) {\n    throw new Error(\"Could not parse CID\");\n  }\n  try {\n    if (username && password && ipfsProvider) {\n      await pin(cid, { username, password }, ipfsProvider);\n    }\n  } catch (err) {\n    console.error(err);\n  }\n\n  return cid;\n};\n"],"sourceRoot":""}